syntax = "proto3";
package rsg.pb;

message Actor {
  int32 id = 1;
}

message Host {
  string name = 1;
}

message Mailbox {
  string name = 1;
}

// This is the first message sent by any client to the RSG server.
message Command {
  message AddActor {
    string actorName = 1;
    string hostName = 2;
  }
  oneof type {
    AddActor addActor = 1;
    bool start = 2;
    string kill = 3;
    bool status = 4;
    Actor connect = 5;
  }
}

// Server's acknowledgment to the client initial command.
message CommandAck {
  bool success = 1; // Defined for all acknowledgments.
  Actor actor = 2; // Only defined as ADD-ACTOR acknowledgment.
}

// The only message sent by clients to the RSG server during the simulation.
message Decision {
  message CreateActor {
    string name = 1;
    Host host = 2;
  }

  message MailboxPut {
    Mailbox mailbox = 1;
    bytes data = 2;
    uint64 simulatedSize = 3;
  }

  oneof type {
    bool quit = 1;

    // static methods in rsg::this_actor
    double thisActorSleepFor = 2;
    double thisActorSleepUntil = 3;
    CreateActor actorCreate = 4;

    // methods in rsg::Actor
    Actor actorGetName = 5;
    Actor actorGetHost = 6;

    // static methods in rsg::Host
    string hostByNameOrNull = 7;

    // methods in rsg::Mailbox
    Mailbox mailboxEmpty = 8;
    Mailbox mailboxListen = 9;
    Mailbox mailboxReady = 10;
    MailboxPut mailboxPut = 11;
    Mailbox mailboxGet = 12;
  }
}

// The only message sent by the RSG to a client during the simulation.
message DecisionAck {
  bool success = 1;
  oneof data {
    string actorGetName = 2;
    Host actorGetHost = 3;
    Actor actorCreate = 4;
    bytes mailboxGet = 5;
  }
}
